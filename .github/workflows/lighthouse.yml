name: Lighthouse Badge

on:
  # 週次実行（日曜日の深夜2時）
  schedule:
    - cron: '0 2 * * 0'
  
  # 手動実行を可能にする
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lighthouse-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Lighthouse
        run: npm install -g lighthouse

      - name: Create lighthouse results directory
        run: mkdir -p lighthouse_results

      - name: Run Lighthouse and Generate Badges
        run: |
          # デスクトップLighthouse実行
          lighthouse https://abta.hachian.com/ \
            --preset=desktop \
            --output=json \
            --output-path=./lighthouse_results/desktop-report.json \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage"
          
          # モバイルLighthouse実行
          lighthouse https://abta.hachian.com/ \
            --output=json \
            --output-path=./lighthouse_results/mobile-report.json \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage"
          
          # Node.jsでJSONパース・バッジ生成
          node -e "
            const fs = require('fs');
            const https = require('https');
            
            function downloadBadge(url, filename) {
              return new Promise((resolve, reject) => {
                https.get(url, (res) => {
                  let data = '';
                  res.on('data', chunk => data += chunk);
                  res.on('end', () => {
                    fs.writeFileSync(filename, data);
                    resolve();
                  });
                }).on('error', reject);
              });
            }
            
            async function generateBadges() {
              try {
                // デスクトップスコア取得
                const desktop = JSON.parse(fs.readFileSync('./lighthouse_results/desktop-report.json', 'utf8'));
                const dPerf = Math.round(desktop.categories.performance.score * 100);
                const dAccess = Math.round(desktop.categories.accessibility.score * 100);
                const dBP = Math.round(desktop.categories['best-practices'].score * 100);
                const dSEO = Math.round(desktop.categories.seo.score * 100);
                
                // モバイルスコア取得
                const mobile = JSON.parse(fs.readFileSync('./lighthouse_results/mobile-report.json', 'utf8'));
                const mPerf = Math.round(mobile.categories.performance.score * 100);
                const mAccess = Math.round(mobile.categories.accessibility.score * 100);
                const mBP = Math.round(mobile.categories['best-practices'].score * 100);
                const mSEO = Math.round(mobile.categories.seo.score * 100);
                
                // バッジURL生成
                const desktopUrl = \`https://img.shields.io/badge/Desktop-\${dPerf}|\${dAccess}|\${dBP}|\${dSEO}-brightgreen?style=flat&logo=lighthouse&logoColor=white\`;
                const mobileUrl = \`https://img.shields.io/badge/Mobile-\${mPerf}|\${mAccess}|\${mBP}|\${mSEO}-brightgreen?style=flat&logo=lighthouse&logoColor=white\`;
                
                // バッジダウンロード
                await downloadBadge(desktopUrl, './lighthouse_results/abta_hachian_com_desktop.svg');
                await downloadBadge(mobileUrl, './lighthouse_results/abta_hachian_com_mobile.svg');
                
                console.log('Desktop scores:', dPerf, dAccess, dBP, dSEO);
                console.log('Mobile scores:', mPerf, mAccess, mBP, mSEO);
                console.log('Badges generated successfully');
              } catch (error) {
                console.error('Error:', error);
                process.exit(1);
              }
            }
            
            generateBadges();
          "

      - name: Commit and Push
        run: |
          git config --local user.email "jamjam8an@gmail.com"
          git config --local user.name "hachian"
          git add lighthouse_results/
          if ! git diff --staged --quiet; then
            git commit -m "docs: update lighthouse badges with actual scores [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi