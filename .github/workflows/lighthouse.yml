name: Lighthouse Badge

on:
  # 週次実行（日曜日の深夜2時）
  schedule:
    - cron: '0 2 * * 0'
  
  # 手動実行を可能にする
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lighthouse-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Lighthouse
        run: npm install -g lighthouse

      - name: Create lighthouse results directory
        run: mkdir -p lighthouse_results

      - name: Run Lighthouse and Generate Badges
        run: |
          set -e  # Exit on any error
          
          echo "Running Lighthouse tests..."
          
          # デスクトップLighthouse実行
          echo "Running desktop Lighthouse..."
          lighthouse https://abta.hachian.com/ \
            --preset=desktop \
            --output=json \
            --output-path=./lighthouse_results/desktop-report.json \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage" \
            --quiet
          
          # モバイルLighthouse実行
          echo "Running mobile Lighthouse..."
          lighthouse https://abta.hachian.com/ \
            --output=json \
            --output-path=./lighthouse_results/mobile-report.json \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage" \
            --quiet
          
          echo "Generating badges..."
          
          # バッジ生成スクリプトを外部ファイルとして作成
          cat > generate-badges.js << 'EOF'
          const fs = require('fs');
          const https = require('https');
          
          function downloadBadge(url, filename) {
            return new Promise((resolve, reject) => {
              console.log(`Downloading badge: ${filename}`);
              https.get(url, (res) => {
                if (res.statusCode !== 200) {
                  reject(new Error(`HTTP ${res.statusCode}: ${res.statusMessage}`));
                  return;
                }
                let data = '';
                res.on('data', chunk => data += chunk);
                res.on('end', () => {
                  fs.writeFileSync(filename, data);
                  console.log(`Badge saved: ${filename}`);
                  resolve();
                });
              }).on('error', reject);
            });
          }
          
          async function generateBadges() {
            try {
              // デスクトップスコア取得
              const desktop = JSON.parse(fs.readFileSync('./lighthouse_results/desktop-report.json', 'utf8'));
              const dPerf = Math.round(desktop.categories.performance.score * 100);
              const dAccess = Math.round(desktop.categories.accessibility.score * 100);
              const dBP = Math.round(desktop.categories['best-practices'].score * 100);
              const dSEO = Math.round(desktop.categories.seo.score * 100);
              
              // モバイルスコア取得
              const mobile = JSON.parse(fs.readFileSync('./lighthouse_results/mobile-report.json', 'utf8'));
              const mPerf = Math.round(mobile.categories.performance.score * 100);
              const mAccess = Math.round(mobile.categories.accessibility.score * 100);
              const mBP = Math.round(mobile.categories['best-practices'].score * 100);
              const mSEO = Math.round(mobile.categories.seo.score * 100);
              
              console.log('Desktop scores:', dPerf, dAccess, dBP, dSEO);
              console.log('Mobile scores:', mPerf, mAccess, mBP, mSEO);
              
              // バッジURL生成（パイプ文字をエンコード）
              const desktopUrl = `https://img.shields.io/badge/Desktop-${dPerf}%7C${dAccess}%7C${dBP}%7C${dSEO}-brightgreen?style=flat&logo=lighthouse&logoColor=white`;
              const mobileUrl = `https://img.shields.io/badge/Mobile-${mPerf}%7C${mAccess}%7C${mBP}%7C${mSEO}-brightgreen?style=flat&logo=lighthouse&logoColor=white`;
              
              // バッジダウンロード
              await downloadBadge(desktopUrl, './lighthouse_results/abta_hachian_com_desktop.svg');
              await downloadBadge(mobileUrl, './lighthouse_results/abta_hachian_com_mobile.svg');
              
              console.log('Badges generated successfully');
            } catch (error) {
              console.error('Error generating badges:', error);
              process.exit(1);
            }
          }
          
          generateBadges();
          EOF
          
          # スクリプト実行
          node generate-badges.js

      - name: Commit and Push
        run: |
          git config --local user.email "jamjam8an@gmail.com"
          git config --local user.name "hachian"
          git add lighthouse_results/
          if ! git diff --staged --quiet; then
            git commit -m "docs: update lighthouse badges with actual scores [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi