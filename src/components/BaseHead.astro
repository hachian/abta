---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE } from '../consts';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import type { ImageMetadata } from 'astro';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	type?: 'website' | 'article';
	publishedTime?: Date;
	modifiedTime?: Date;
	author?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { 
	title, 
	description, 
	image = FallbackImage, 
	type = 'website',
	publishedTime,
	modifiedTime,
	author 
} = Astro.props;

// Organization構造化データ
const organizationSchema = {
	"@context": "https://schema.org",
	"@type": "Organization",
	"name": "ABTA",
	"url": Astro.site?.href,
	"logo": {
		"@type": "ImageObject",
		"url": `${Astro.site}favicon.svg`
	},
	"description": "Astro Blog Tags Archive - 日本語ブログ執筆者向けに最適化されたAstroベースのブログテンプレート"
};
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Google Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap" rel="stylesheet" />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />
{type === 'article' && publishedTime && (
	<meta property="article:published_time" content={publishedTime.toISOString()} />
)}
{type === 'article' && modifiedTime && (
	<meta property="article:modified_time" content={modifiedTime.toISOString()} />
)}
{type === 'article' && author && (
	<meta property="article:author" content={author} />
)}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />

<!-- Organization構造化データ -->
<script type="application/ld+json" set:html={JSON.stringify(organizationSchema)}></script>
