name: Lighthouse Badge

on:
  # mainブランチへのプッシュで実行（即座にバッジを更新）
  push:
    branches: [ main ]
    paths-ignore:
      - 'lighthouse_results/**'
  
  # 週次実行（日曜日の深夜2時）
  schedule:
    - cron: '0 2 * * 0'
  
  # 手動実行を可能にする
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lighthouse-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Lighthouse CLI
        run: npm install -g lighthouse

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Create lighthouse results directory
        run: mkdir -p lighthouse_results

      - name: Run Lighthouse
        run: |
          echo "Running Lighthouse on https://abta.hachian.com/"
          lighthouse https://abta.hachian.com/ \
            --chrome-flags="--headless --no-sandbox --disable-gpu --disable-dev-shm-usage" \
            --output=json \
            --output-path=./lighthouse_results/lighthouse-report.json \
            --preset=desktop

      - name: Generate Badges from Results
        run: |
          echo "Generating badges from Lighthouse results..."
          
          if [ -f "./lighthouse_results/lighthouse-report.json" ]; then
            echo "Found Lighthouse report file"
            
            # JSONファイルからスコアを抽出してバッジ生成
            node -e "
              const fs = require('fs');
              const https = require('https');
              
              function downloadBadge(url, filename) {
                return new Promise((resolve, reject) => {
                  console.log('Downloading badge: ' + filename);
                  https.get(url, (res) => {
                    if (res.statusCode !== 200) {
                      reject(new Error('HTTP ' + res.statusCode + ': ' + res.statusMessage));
                      return;
                    }
                    let data = '';
                    res.on('data', chunk => data += chunk);
                    res.on('end', () => {
                      fs.writeFileSync(filename, data);
                      console.log('Badge saved: ' + filename);
                      resolve();
                    });
                  }).on('error', reject);
                });
              }
              
              async function generateBadges() {
                try {
                  const report = JSON.parse(fs.readFileSync('./lighthouse_results/lighthouse-report.json', 'utf8'));
                  
                  const perf = Math.round(report.categories.performance.score * 100);
                  const access = Math.round(report.categories.accessibility.score * 100);
                  const bp = Math.round(report.categories['best-practices'].score * 100);
                  const seo = Math.round(report.categories.seo.score * 100);
                  
                  console.log('Lighthouse scores:', perf, access, bp, seo);
                  
                  // デスクトップバッジ
                  const desktopUrl = 'https://img.shields.io/badge/Desktop-' + perf + '%7C' + access + '%7C' + bp + '%7C' + seo + '-brightgreen?style=flat&logo=lighthouse&logoColor=white';
                  await downloadBadge(desktopUrl, './lighthouse_results/abta_hachian_com_desktop.svg');
                  
                  // モバイルバッジ（同じスコアを使用）
                  const mobileUrl = 'https://img.shields.io/badge/Mobile-' + perf + '%7C' + access + '%7C' + bp + '%7C' + seo + '-brightgreen?style=flat&logo=lighthouse&logoColor=white';
                  await downloadBadge(mobileUrl, './lighthouse_results/abta_hachian_com_mobile.svg');
                  
                  console.log('Badges generated successfully');
                } catch (error) {
                  console.error('Error generating badges:', error);
                  process.exit(1);
                }
              }
              
              generateBadges();
            "
          else
            echo "No Lighthouse report found"
            exit 1
          fi

      - name: Commit and Push
        run: |
          git config --local user.email "jamjam8an@gmail.com"
          git config --local user.name "hachian"
          git add lighthouse_results/
          if ! git diff --staged --quiet; then
            git commit -m "docs: update lighthouse badges with actual scores [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi