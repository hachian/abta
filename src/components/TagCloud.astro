---
import { getCollection } from 'astro:content';

const posts = await getCollection('blog');
const allTags = posts.flatMap(post => post.data.tags || []);

// タグごとの記事数をカウント
const tagCounts = allTags.reduce((acc, tag) => {
  acc[tag] = (acc[tag] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

// タグを記事数でソート
const sortedTags = Object.entries(tagCounts)
  .sort(([, a], [, b]) => b - a)
  .map(([tag, count]) => ({ tag, count }));

// 最大記事数を取得（フォントサイズ計算用）
const maxCount = Math.max(...Object.values(tagCounts));

// フォントサイズを計算（3段階）
const getFontSize = (count: number) => {
  const ratio = count / maxCount;
  if (ratio > 0.6) return '0.875rem';
  if (ratio > 0.3) return '0.75rem';
  return '0.625rem';
};

// 月別アーカイブデータを生成
const allYearMonths = posts.map(post => {
  const date = new Date(post.data.pubDate);
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  return `${year}/${month}`;
});

// 重複を除去して月別記事数をカウント
const yearMonthCounts = allYearMonths.reduce((acc, yearMonth) => {
  acc[yearMonth] = (acc[yearMonth] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

// 月別データを新しい順にソートして上位5件を取得
const sortedYearMonths = Object.entries(yearMonthCounts)
  .sort(([a], [b]) => b.localeCompare(a))
  .slice(0, 5)
  .map(([yearMonth, count]) => ({ yearMonth, count }));
---

<div class="tag-cloud">
  <h3>タグ一覧</h3>
  <div class="tags">
    {sortedTags.map(({ tag, count }) => (
      <a 
        href={`/tags/${tag}/`} 
        class="tag" 
        style={`font-size: ${getFontSize(count)}`}
        title={`${count}件の記事`}
      >
        {tag}
      </a>
    ))}
  </div>
  
  {sortedYearMonths.length > 0 && (
    <div class="archive-section">
      <h4>月別アーカイブ</h4>
      <div class="archive-links">
        {sortedYearMonths.map(({ yearMonth, count }) => {
          const [year, month] = yearMonth.split('/');
          return (
            <a 
              href={`/archive/monthly/${year}/${month}/`} 
              class="archive-link"
              title={`${count}件の記事`}
            >
              {yearMonth} ({count})
            </a>
          );
        })}
      </div>
      <a href="/archive/monthly/" class="archive-all-link">すべて見る</a>
    </div>
  )}
</div>

<style>
  .tag-cloud {
    background: var(--primary-background);
    box-shadow: var(--box-shadow);
    border-radius: 12px;
    padding: 1.5rem;
    position: sticky;
    top: 2rem;
  }

  h3 {
    margin: 0 0 0.75rem 0;
    font-size: 1rem;
    color: var(--primary-foreground);
    text-align: center;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.4rem;
    justify-content: center;
  }

  .tag {
    background: var(--primary-dark);
    color: var(--primary-background);
    padding: 0.2rem 0.5rem;
    border-radius: 15px;
    text-decoration: none;
    transition: all 0.2s ease;
    font-weight: 500;
    line-height: 1.2;
  }

  .tag:hover {
    background: var(--primary);
    transform: translateY(-2px);
    box-shadow: var(--box-shadow);
  }

  @media (max-width: 1279px) {
    .tag-cloud {
      padding: 1rem;
    }
  }

  @media (max-width: 767px) {
    .tag-cloud {
      position: static;
      margin-bottom: 1.5rem;
    }
  }

  .archive-section {
    margin-top: 1.5rem;
    border-top: 1px solid oklch(var(--primary-foreground) / 0.1);
    padding-top: 1rem;
  }

  h4 {
    margin: 0 0 0.75rem 0;
    font-size: 0.875rem;
    color: var(--primary-foreground);
    text-align: center;
    font-weight: 600;
  }

  .archive-links {
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
    margin-bottom: 0.75rem;
  }

  .archive-link {
    background: var(--primary-dark);
    color: var(--primary-background);
    padding: 0.3rem 0.6rem;
    border-radius: 8px;
    text-decoration: none;
    transition: all 0.2s ease;
    font-size: 0.75rem;
    font-weight: 500;
    text-align: center;
  }

  .archive-link:hover {
    background: var(--primary);
    transform: translateY(-1px);
    box-shadow: var(--box-shadow);
  }

  .archive-all-link {
    display: block;
    color: var(--primary);
    text-decoration: none;
    font-size: 0.75rem;
    text-align: center;
    padding: 0.25rem 0;
    border-radius: 4px;
    transition: all 0.2s ease;
    font-weight: 500;
  }

  .archive-all-link:hover {
    background: oklch(var(--primary) / 0.1);
    color: var(--primary-dark);
  }
</style>